trigger:
  - main

variables:
  NEXT_PUBLIC_API_BASE_URL: '$(apiBaseUrl)' 

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '20.x'
  displayName: 'Install Node.js'

- script: |
    npm ci
  displayName: 'Install dependencies'

- script: |
    npm run build
  displayName: 'Build Next.js app'
  env:
    NEXT_PUBLIC_API_BASE_URL: $(NEXT_PUBLIC_API_BASE_URL)

- script: |
    echo "Checking standalone directory structure:"
    ls -la $(System.DefaultWorkingDirectory)/.next/standalone/
  displayName: 'Verify build output structure'

- script: |
    mkdir -p $(Build.ArtifactStagingDirectory)/site
    cp -r $(System.DefaultWorkingDirectory)/.next/standalone/* $(Build.ArtifactStagingDirectory)/site/
    cp -r $(System.DefaultWorkingDirectory)/.next/static $(Build.ArtifactStagingDirectory)/site/.next/static
    cp -r $(System.DefaultWorkingDirectory)/public $(Build.ArtifactStagingDirectory)/site/
  displayName: 'Prepare deployment package'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/site'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: AzureWebApp@1
  inputs:
    azureSubscription: 'PredictionTimeAzure'
    appName: 'prediction-time-v1'
    package: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    deploymentMethod: 'auto'
    startUpCommand: 'node server.js'